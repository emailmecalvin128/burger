//pseudocode
1. create github repo called burger and clone it to your computer. (done)
2. Make package.json file by running `npm init` from the command line // JS Object Notation : JSON text that is used for data exchange: JS Object <> JSON (done)
3. Install express npm package: `npm install express` (done) 
4. Create a server.js (done)
5. Install the handlebars npm package: `npm install express-handlebars` (done)
6. Install mySQL npm package: `npm install mysql` (done)
//7. Require the following npm packages inside of the server.js file: *express (HELP?)

#db Setup
1. Inside burger directory create a folder name `db`. (done)
2. In the `db` folder, create a file named `schema.sql`. Write SQL queries this file that do the following: (done)
* create the `burgers_db`. (done)
//* switch to or use the `burgers_db`. (HELP?)
//* create a `burgers table with these fields`: (HELP?)
*id*: an auto incrementing int that serves as the primary key.(done)
* burger_name* a string (HELP?)
* devoured* a boolean(done)

//3. Still in the `db` folder, create a `seeds.sql` file. In this file, write insert queries to populate the `burgers` table with at least three entries. (Done)
4. Run the 'schema.sql and 'seeds.sql' files into the mySQL server from the command line (HELP?)// $ mysql -u root -p mysql> USE mydb;// mysql> source/home/user/downloads/schema.sql
5. Now your going to run these SQL files. 
* Make sure your in the 'db folder' of your app. 
* Start MySQL command line tool and login: `mysql -u root -p`. 
* with the `mysql>` command line tool running, enter the command `source schema.sql`. This will run your schema file and all of the queries in it-- in other words, you'll be creating your database. (HELP?)

*Now insert the entries your defined in `seeds.sql` by running the file: `source seeds.sql`.
* Close out of the MySQL command line tool:`exit`. 

----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Config Setup 
1. Inside your 'burger' directory, create a folder named 'config'. (done)
2. Create a connection.js 'file inside 'config' directory. (done)
* Inside the 'connection.js' file setup code to connect Node to MySQL.
* Export the connection. 
3. Create an `orm.js` file inside `config` directory. 
*import (require) `connection.js` into `orm.js` 
* In the orm.js file, create the methods that will execute the necessary MySQL commands in the controllers. 
these are the methods you will need in order to retreive and store data in your database. 

*selectall()
*insertone()
*updateone()

*export the ORM object in module.exports
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#Controller setup 
1. Inside your burger directory, create a folder named 'controllers' 
2. In controllers, create the burgers_controller.js file. 
3. inside the burgers_controller.js file, import the following: 

*express
*burger.js 

4. create the router for the app, and export the router at the end of your file
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#view setup
1. inside your burger directory, create a folder name views 
2. create the `index.handlebars` file inside `views` directory.
3. setup the `main.handlebars` file so it's able to be used by handlebars. (HELP?)
4. setup the `index.handlebars` to have the template that handlebars can render onto. 
5. create a button in `index.handlebars` that will submit the user input into the database. 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
#directory Structure.



